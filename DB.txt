DROP DATABASE IF EXISTS SB_AM;
CREATE DATABASE SB_AM;
USE SB_AM;

-- 테이블 생성
CREATE TABLE article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL DEFAULT NOW(),
    updateDate DATETIME NOT NULL,
    title VARCHAR(100) NOT NULL,
    `body` TEXT NOT NULL
);
ALTER TABLE article ADD COLUMN memberId INT UNSIGNED NOT NULL AFTER updateDate;
ALTER TABLE article ADD COLUMN boardId INT UNSIGNED NOT NULL AFTER memberId;
ALTER TABLE article ADD COLUMN hitCnt INT UNSIGNED NOT NULL DEFAULT 0;

CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	`authLevel` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT '권한 레벨 (일반 = 1, 관리자 = 3)',
	`name` VARCHAR(20) NOT NULL,
	nickname VARCHAR(20) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴 여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

CREATE TABLE board (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	`code` VARCHAR(20) NOT NULL UNIQUE COMMENT 'notice(공지사항), free(자유), ...',
	`name` VARCHAR(20) NOT NULL UNIQUE COMMENT '게시판 이름',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '삭제 여부 (삭제 전 = 0, 삭제 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

CREATE TABLE reactionPoint (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	relTypeCode VARCHAR(20) COMMENT '관련 데이터 타입 코드',
	relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`point` INT NOT NULL DEFAULT 0 
);

CREATE TABLE reply (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	relTypeCode VARCHAR(20) COMMENT '관련 데이터 타입 코드',
	relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`body` TEXT NOT NULL
);

TRUNCATE article;
TRUNCATE `member`;
TRUNCATE board;
TRUNCATE reactionPoint;
TRUNCATE reply;

-- 테이블 조회
SELECT * FROM article;
SELECT * FROM `member`;
SELECT * FROM board;
SELECT * FROM reactionPoint;
SELECT * FROM reply;

SELECT LAST_INSERT_ID();
SELECT * FROM `member` WHERE loginId = '아이디';

SELECT a.*, m.nickname AS writerName
FROM article AS a
INNER JOIN `member` AS m 
ON a.memberId = m.id
ORDER BY a.id DESC;

SELECT A.*
	, M.nickname AS writerName
	, IFNULL(SUM(RP.point), 0) AS sumReactionPoint
	FROM article AS A
	INNER JOIN `member` AS M 
	ON A.memberId = M.id
	LEFT JOIN reactionPoint AS RP 
	ON RP.relTypeCode = 'article'
	AND A.id = RP.relId
	WHERE A.boardId = 2
	GROUP BY A.id
	ORDER BY A.id DESC;

-- SELECT A.*
-- 	, M.nickname AS writerName
-- 	, IFNULL(SUM(RP.point), 0) AS sumReactionPoint
-- 	, SUM(IF(RP.`point` > 0, RP.`point`, 0 )) AS goodReactionPoint
-- 	, SUM(IF(RP.`point` < 0, RP.`point`, 0 )) AS badReactionPoint
-- 	FROM article AS A
-- 	INNER JOIN `member` AS M 
-- 	ON A.memberId = M.id
-- 	LEFT JOIN reactionPoint AS RP 
-- 	ON RP.relTypeCode = 'article'
-- 	AND A.id = RP.relId
-- 	WHERE A.boardId = 2
-- 	GROUP BY A.id
-- 	ORDER BY A.id DESC;

WITH AM AS (
	SELECT A.*
	, M.nickname AS writerName
	FROM article AS A
	INNER JOIN `member` AS M 
	ON A.memberId = M.id
)
SELECT AM.*
	, IFNULL(SUM(RP.point), 0) AS sumReactionPoint
 	, SUM(IF(RP.`point` > 0, RP.`point`, 0 )) AS goodReactionPoint
 	, SUM(IF(RP.`point` < 0, RP.`point`, 0 )) AS badReactionPoint
	FROM AM
	LEFT JOIN reactionPoint AS RP 
	ON RP.relTypeCode = 'article'
	AND AM.id = RP.relId 
	GROUP BY AM.id 
	ORDER BY AM.id DESC;

SELECT * FROM reactionPoint;
SELECT *
	FROM reactionPoint
	WHERE memberId = 1
	AND relTypeCode = 'article'
	AND relId = 11;
SELECT IFNULL(SUM(`point`), 0) AS sumReactionPoint
 	, SUM(IF(`point` > 0, `point`, 0 )) AS goodReactionPoint
 	, SUM(IF(`point` < 0, `point`, 0 )) AS badReactionPoint
	FROM reactionPoint
	WHERE memberId = 3
	AND relTypeCode = 'article'
	AND relId = 5;
SELECT IFNULL(SUM(`point`), 0) AS sumReactionPoint
	FROM reactionPoint
	WHERE memberId = 2
	AND relTypeCode = 'article'
	AND relId = 5;

SELECT r.*, m.nickname AS writerName
FROM reply r
LEFT JOIN `member` AS m 
ON r.memberId = m.id
WHERE relTypeCode = 'article'
AND relId = 1;

-- 데이터 추가
INSERT INTO article
SET updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '공지사항',
`body` = '공지사항';
INSERT INTO article
SET updateDate = NOW(),
memberId = 2,
boardId = 2,
title = '제목',
`body` = '내용';
INSERT INTO article
SET updateDate = NOW(),
memberId = 3,
boardId = 2,
title = '제목',
`body` = '내용';
-- INSERT INTO article
-- (
-- 	updateDate, memberId, boardId, title, `body`
-- )
-- SELECT NOW(), FLOOR(RAND() * 3) + 1, 2, CONCAT('제목_', RAND()), CONCAT('내_', RAND())
-- FROM article;

INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'admin',
loginPw = SHA2('admin', 256),
authLevel = 3,
`name` = '관리자',
nickname = '관리자',
cellphoneNum = '01012345678',
email = 'admin@gmail.com';
INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'test1',
loginPw = SHA2('test1', 256),
`name` = '회원1',
nickname = '회원1',
cellphoneNum = '01012345678',
email = 'test1@gmail.com';
INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'test2',
loginPw = SHA2('test2', 256),
`name` = '회원2',
nickname = '회원2',
cellphoneNum = '01012345678',
email = 'test2@gmail.com';

INSERT INTO board
SET updateDate = NOW(),
`code` = 'notice',
`name` = '공지사항';
INSERT INTO board
SET updateDate = NOW(),
`code` = 'free',
`name` = '자유';

-- 3번 회원이 4번 글에 싫어요
INSERT INTO reactionPoint
SET updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 4,
`point` = -1;

INSERT INTO reply
SET updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 2,
`body` = '댓글1';
INSERT INTO reply
SET updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 2,
`body` = '댓글2';

-- 암호화
SELECT SHA2('test1', 256);