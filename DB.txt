DROP DATABASE IF EXISTS SB_AM;
CREATE DATABASE SB_AM;
USE SB_AM;

CREATE TABLE article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL DEFAULT NOW(),
    updateDate DATETIME NOT NULL,
    title VARCHAR(100) NOT NULL,
    `body` TEXT NOT NULL
);
ALTER TABLE article ADD COLUMN memberId INT UNSIGNED NOT NULL AFTER updateDate;
ALTER TABLE article ADD COLUMN boardId INT UNSIGNED NOT NULL AFTER memberId;
ALTER TABLE article ADD COLUMN hitCnt INT UNSIGNED NOT NULL DEFAULT 0;

CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	`authLevel` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT '권한 레벨 (일반 = 1, 관리자 = 3)',
	`name` VARCHAR(20) NOT NULL,
	nickname VARCHAR(20) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴 여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

CREATE TABLE board (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	`code` VARCHAR(20) NOT NULL UNIQUE COMMENT 'notice(공지사항), free(자유), ...',
	`name` VARCHAR(20) NOT NULL UNIQUE COMMENT '게시판 이름',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '삭제 여부 (삭제 전 = 0, 삭제 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

CREATE TABLE reactionPoint (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL DEFAULT NOW(),
	updateDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	relTypeCode VARCHAR(20) COMMENT '관련 데이터 타입 코드',
	relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`point` INT NOT NULL DEFAULT 0 
);

TRUNCATE article;
TRUNCATE `member`;
TRUNCATE board;

SELECT * FROM article;
SELECT * FROM `member`;
SELECT * FROM board;
SELECT * FROM reactionPoint;

SELECT LAST_INSERT_ID();
SELECT * FROM `member` WHERE loginId = '아이디';

SELECT a.*, m.nickname AS writerName
FROM article AS a
INNER JOIN `member` AS m 
ON a.memberId = m.id
ORDER BY a.id DESC;

INSERT INTO article
SET updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '공지사항',
`body` = '공지사항';
INSERT INTO article
SET updateDate = NOW(),
memberId = 2,
boardId = 2,
title = '제목',
`body` = '내용';
-- INSERT INTO article
-- (
-- 	updateDate, memberId, boardId, title, `body`
-- )
-- SELECT NOW(), FLOOR(RAND() * 3) + 1, 2, CONCAT('제목_', RAND()), CONCAT('내_', RAND())
-- FROM article;

INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'admin',
loginPw = 'admin',
authLevel = 3,
`name` = 'admin',
nickname = 'admin',
cellphoneNum = '01012345678',
email = 'admin@gmail.com';
INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'test',
loginPw = 'test',
`name` = 'test',
nickname = 'test',
cellphoneNum = '01012345678',
email = 'test@gmail.com';
INSERT INTO `member`
SET updateDate = NOW(),
loginId = 'test2',
loginPw = 'test2',
`name` = 'test2',
nickname = 'test2',
cellphoneNum = '01012345678',
email = 'test2@gmail.com';

INSERT INTO board
SET updateDate = NOW(),
`code` = 'notice',
`name` = '공지사항';
INSERT INTO board
SET updateDate = NOW(),
`code` = 'free',
`name` = '자유';

-- 3번 회원이 4번 글에 싫어요
INSERT INTO reactionPoint
SET updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 4,
`point` = -1;
-- 2번 회원이 1번 글에 좋아요
INSERT INTO reactionPoint
SET updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 1,
`point` = 1;
